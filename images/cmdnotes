1  ls
    2  kubectl get nodes
    3  oci -v
    4  mkdir -p $HOME/.kube
    5  oci ce cluster create-kubeconfig --cluster-id ocid1.cluster.oc1.iad.aaaaaaaaafstgnddguywcmrygjtdaolfhbtdqy3eguygkzlcmc3winjumu2d --file $HOME/.kube/config --region us-ashburn-1 --token-version 2.0.0
    6  export KUBECONFIG=$HOME/.kube/config
    7  kubectl get nodes
    8  kubectl create clusterrolebinding my-cluster-admin-binding --clusterrole=cluster-admin --user=ocid1.user.oc1..aaaaaaaa6pxjz34vntzl6oov5isrubtg7wjjm4ihy475hbolxl434aeyxcaa
    9  git clone https://github.com/oracle/weblogic-kubernetes-operator.git  -b v2.5.0
   10  ls
   11  cat << EOF | kubectl apply -f -
   12  apiVersion: rbac.authorization.k8s.io/v1
   13  kind: ClusterRoleBinding
   14  metadata:
   15    name: helm-user-cluster-admin-role
   16  roleRef:
   17    apiGroup: rbac.authorization.k8s.io
   18    kind: ClusterRole
   19    name: cluster-admin
   20  subjects:
   21  - kind: ServiceAccount
   22    name: default
   23    namespace: kube-system
   24  EOF
   25  kubectl create namespace sample-weblogic-operator-ns
   26  kubectl create serviceaccount -n sample-weblogic-operator-ns sample-weblogic-operator-sa
   27  helm repo list
   28  helm version
   29  helm repo add stable https://kubernetes-charts.storage.googleapis.com/
   30  helm repo list
   31  ls
   32  cd weblogic-kubernetes-operator/
   33  helm install sample-weblogic-operator   kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"
   34  kubectl get po -n sample-weblogic-operator-ns
   35  helm list -n sample-weblogic-operator-ns
   36  ls
   37  kubectl create namespace traefik
   38  helm install traefik-operator stable/traefik --namespace traefik --values kubernetes/samples/charts/traefik/values.yaml  --set "kubernetes.namespaces={traefik}" --set "serviceType=LoadBalancer"
   39  kubectl get service -n traefik
   40  kubectl describe svc traefik-operator --namespace traefik | grep Ingress | awk '{print $3}'
   41  helm list -n traefik
   42  curl -H 'host: traefik.example.com' http://129.213.142.104
   43  kubectl create namespace sample-domain1-ns
   44  helm upgrade sample-weblogic-operator   kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --reuse-values   --set "domainNamespaces={sample-domain1-ns}"   --wait
   45  helm upgrade traefik-operator   stable/traefik   --namespace traefik   --reuse-values   --set "kubernetes.namespaces={traefik,sample-domain1-ns}"   --wait
   46  curl -LSs https://raw.githubusercontent.com/nagypeter/weblogic-operator-tutorial/master/k8s/domain_short.yaml >~/domain.yaml
   47  vi domain.yaml
   48  ls
   49  kubectl apply -f ~/domain.yaml
   50  kubectl get pod -n sample-domain1-ns
   51  kubectl get po -n sample-domain1-ns -o wide
   52  kubectl apply -f ~/domain.yaml
   53  kubectl apply -f domain.yaml
   54  kubectl get pod -n sample-domain1-ns
   55  cat domain.yaml
   56  nano domain.yaml
   57  vi domain.yaml
   58  kubectl get pod -n sample-domain1-ns
   59  kubectl apply -f domain.yaml
   60  kubectl get pod -n sample-domain1-ns
   61  kubectl get namespaces
   62  vi domain.yaml
   63  kubectl get pod -n sample-domain1-ns
   64  rm domain.yaml
   65  ls
   66  curl -LSs https://raw.githubusercontent.com/nagypeter/weblogic-operator-tutorial/master/k8s/domain_short.yaml >~/domain.yaml
   67  ls
   68  kubectl get po -n sample-weblogic-operator-ns
   69  ls
   70  vi domain.yaml
   71  curl -LSs https://github.com/oracle/weblogic-kubernetes-operator/blob/master/kubernetes/samples/scripts/create-weblogic-domain/domain-home-in-image/create-domain-inputs.yaml > ~/my-inputs.yaml
   72  ls
   73  vi my-inputs.yaml
   74  rm my-inputs.yaml
   75  curl -LSs https://raw.githubusercontent.com/oracle/weblogic-kubernetes-operator/master/kubernetes/samples/scripts/create-weblogic-domain/domain-home-in-image/create-domain-inputs.yaml > ~/my-inputs.yaml
   76  ls
   77  vi my-inputs.yaml
   78  ls
   79  cd weblogic-kubernetes-operator/
   80  ls
   81  cd kubernetes/samples/scripts/create-weblogic-domain/domain-home-in-image
   82  ls
   83  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output -u weblogic -p welcome1
   84  kubectl -n sample-domain1-ns create secret generic sample-domain1-weblogic-credentials   --from-literal=username=weblogic   --from-literal=password=welcome1
   85  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output -u weblogic -p welcome1
   86  ls
   87  vi my-inputs.yaml
   88  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output -u weblogic -p welcome1
   89  cd kubernetes/samples/scripts/create-weblogic-domain/domain-home-in-image
   90  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output -u weblogic -p welcome1
   91  ls
   92  cd weblogic-kubernetes-operator/
   93  ls
   94  cd kubernetes/samples/scripts/create-weblogic-domain/domain-home-in-image
   95  ls
   96  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output -u weblogic -p welcome1
   97  kubectl describe domain sample-domain1 -n sample-domain1-ns
   98  kubectl get pods -n sample-domain1-ns
   99  kubectl create secret docker-registry ocirsecret   -n sample-domain1-ns   --docker-server=iad.ocir.io   --docker-username='aurablocks9/sasanka'   --docker-password='{WdJTKiB<2yqhJ58ubX>'   --docker-email='sasanka.abeysinghe@oracle.com'
  100  ls
  101  kubectl describe domain sample-domain1 -n sample-domain1-ns
  102  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output1 -u weblogic -p welcome1
  103  kubectl describe domain sample-domain1 -n sample-domain1-ns
  104  kubectl get pods -n sample-domain1-ns
  105  kubectl delete namespace sample-domain1-ns
  106  kubectl create namespace sample-domain1-ns
  107  helm upgrade sample-weblogic-operator  kubernetes/charts/weblogic-operator     --namespace sample-weblogic-operator-ns     --reuse-values     --set "domainNamespaces={sample-domain1-ns}"     --wait
  108  cd ..
  109  ls
  110  cd ..
  111  helm upgrade sample-weblogic-operator  kubernetes/charts/weblogic-operator     --namespace sample-weblogic-operator-ns     --reuse-values     --set "domainNamespaces={sample-domain1-ns}"     --wait
  112  helm upgrade traefik-operator stable/traefik     --namespace traefik     --reuse-values     --set "kubernetes.namespaces={traefik,sample-domain1-ns}"     --wait
  113  kubectl -n sample-domain1-ns create secret generic sample-domain1-weblogic-credentials   --from-literal=username=weblogic   --from-literal=password=welcome1
  114  kubectl create secret docker-registry ocirsecret   -n sample-domain1-ns   --docker-server=iad.ocir.io   --docker-username='aurablocks9/sasanka'   --docker-password='{WdJTKiB<2yqhJ58ubX>'   --docker-email='sasanka.abeysinghe@oracle.com'
  115  vi ~/my-inputs.yaml
  116  kubectl get secrets -n sample-domain1-ns
  117  cd kubernetes/samples/scripts/create-weblogic-domain/domain-home-in-image
  118  ./create-domain.sh -i my-inputs.yaml -o ~/output2 -u weblogic -p welcome1
  119  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output2 -u weblogic -p welcome1
  120  kubectl describe domain sample-domain1 -n sample-domain1-ns
  121  kubectl get pods -n sample-domain1-ns
  122  kubectl describe domain sample-domain1 -n sample-domain1-ns
  123  vi ~/my-inputs.yaml
  124  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output3 -u weblogic -p welcome1
  125  kubectl describe domain sample-domain1 -n sample-domain1-ns
  126  kubectl show secrets
  127  kubectl get secrets
  128  kubectl create secret docker-registry ocirsecret   -n sample-domain1-ns   --docker-server=iad.ocir.io   --docker-username='aurablocks9/sasanka'   --docker-password='{WdJTKiB<2yqhJ58ubX>'   --docker-email='sasanka.abeysinghe@oracle.com'
  129  kubectl get secrets
  130  kubectl get nodes
  131  kubectl get nodes -n sample-domain1-ns
  132  kubectl get secrets -n sample-domain1-ns
  133  vi ~/my-inputs.yaml
  134  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output4 -u weblogic -p welcome1
  135  kubectl describe domain sample-domain1 -n sample-domain1-ns
  136  kubectl pods
  137  kubectl get pods
  138  kubectl get pods -n sample-domain1-ns
  139  kubectl get domains -n sample-domain1-ns
  140  ls
  141  cd ..
  142  ls
  143  cd ..
  144  ls
  145  cd ..
  146  ls
  147  cd ..
  148  ls
  149  cd ...
  150  ls
  151  cd ..
  152  ls
  153  cd ..
  154  ls
  155  rm -r output
  156  rm -r output1
  157  rm -r output2
  158  rm -r output3
  159  rm -r output4
  160  ls
  161  kubectl delete namespace sample-domain1-ns
  162  docker images
  163  docker rmi 280445ab8751
  164  docker images
  165  docker rmi ec7cb820c72b
  166  ls
  167  docker images
  168  docker rmi 6496a91f41ca
  169  docker images
  170  docker rmi ce2a3cdfd070
  171  docker rmi c2528387c193
  172  ls
  173  docker images
  174  kubectl delete delete sample-weblogic-operator-ns
  175  kubectl delete sample-weblogic-operator-ns
  176  kubectl delete namespace sample-weblogic-operator-ns
  177  kubectl get po -n sample-weblogic-operator-ns
  178  kubectl delete namespace traefik
  179  docker images
  180  docker rmi d4d95aca8c17
  181  docker images
  182  docker login
  183  docker pull oracle/weblogic-kubernetes-operator:2.5.0
  184  docker images
  185  docker pull traefik:1.7.12
  186  docker images
  187  cat <<EOF | kubectl apply -f -
  188  apiVersion: rbac.authorization.k8s.io/v1
  189  kind: ClusterRoleBinding
  190  metadata:
  191    name: helm-user-cluster-admin-role
  192  roleRef:
  193    apiGroup: rbac.authorization.k8s.io
  194    kind: ClusterRole
  195    name: cluster-admin
  196  subjects:
  197  - kind: ServiceAccount
  198    name: default
  199    namespace: kube-system
  200  EOF
  201  helm repo list
  202  kubectl create namespace traefik
  203  ls
  204  cd weblogic-kubernetes-operator/
  205  ls
  206  helm install traefik-operator stable/traefik     --namespace traefik     --values kubernetes/samples/charts/traefik/values.yaml     --set "kubernetes.namespaces={traefik}"     --wait
  207  kubectl create namespace sample-weblogic-operator-ns
  208  kubectl create serviceaccount -n sample-weblogic-operator-ns sample-weblogic-operator-sa
  209  helm install sample-weblogic-operator kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"   --wait
  210  helm delete sample-weblogic-operator-ns-weblogic-operator-clusterrole-nonresource
  211  helm uninstall sample-weblogic-operator-ns-weblogic-operator-clusterrole-nonresource
  212  kubectl get crd
  213  kubectl delete crd domains.weblogic.oracle
  214  helm install sample-weblogic-operator kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"   --wait
  215  helm repo update
  216  helm install sample-weblogic-operator kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"   --wait
  217  ls
  218  cd weblogic-kubernetes-operator/
  219  ls
  220  helm install sample-weblogic-operator kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"   --wait
  221  helm list --all --all-namespaces
  222  helm uninstall sample-weblogic-operator-ns-weblogic-operator-clusterrole-nonresource
  223  helm install sample-weblogic-operator kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"   --wait
  224  kubectl delete namespace sample-weblogic-operator-ns
  225  kubectl delete service sample-weblogic-operator-sa
  226  helm ls
  227  kubectl create namespace sample-weblogic-operator-ns
  228  kubectl create serviceaccount -n sample-weblogic-operator-ns sample-weblogic-operator-sa
  229  cat <<EOF | kubectl apply -f -
  230  apiVersion: rbac.authorization.k8s.io/v1
  231  kind: ClusterRoleBinding
  232  metadata:
  233    name: helm-user-cluster-admin-role
  234  roleRef:
  235    apiGroup: rbac.authorization.k8s.io
  236    kind: ClusterRole
  237    name: cluster-admin
  238  subjects:
  239  - kind: ServiceAccount
  240    name: default
  241    namespace: kube-system
  242  EOF
  243  ls
  244  kubernetes/samples/scripts/delete-domain/delete-weblogic-domain-resources.sh -d sample-domain1
  245  helm install sample-weblogic-operator kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"   --wait
  246  helm install sample-weblogic-operator kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"   --wait --force
  247  kubectl get pods -n sample-weblogic-operator-ns
  248  kubectl delete ClusterRole sample-weblogic-operator-ns-weblogic-operator-clusterrole-namespace
  249  clear
  250  cat <<EOF | kubectl apply -f -
  251  apiVersion: rbac.authorization.k8s.io/v1
  252  kind: ClusterRoleBinding
  253  metadata:
  254    name: helm-user-cluster-admin-role
  255  roleRef:
  256    apiGroup: rbac.authorization.k8s.io
  257    kind: ClusterRole
  258    name: cluster-admin
  259  subjects:
  260  - kind: ServiceAccount
  261    name: default
  262    namespace: kube-system
  263  EOF
  264  kubectl create namespace sample-weblogic-operator-ns
  265  kubectl delete namespace sample-weblogic-operator-ns
  266  kubectl create namespace sample-weblogic-operator-ns
  267  kubectl create serviceaccount -n sample-weblogic-operator-ns sample-weblogic-operator-sa
  268  helm install sample-weblogic-operator kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"   --wait
  269  kubectl delete ClusterRole sample-weblogic-operator-ns-weblogic-operator-clusterrole-general
  270  helm install sample-weblogic-operator kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"   --wait
  271  kubectl delete ClusterRole sample-weblogic-operator-ns-weblogic-operator-clusterrole-operator-admin
  272  helm install sample-weblogic-operator kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"   --wait
  273  kubectl delete ClusterRole sample-weblogic-operator-ns-weblogic-operator-clusterrole-domain-admin
  274  helm install sample-weblogic-operator kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"   --wait
  275  kubectl delete ClusterRole sample-weblogic-operator-ns-weblogic-operator-clusterrole-nonresource
  276  helm install sample-weblogic-operator kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"   --wait
  277  kubectl delete ClusterRole sample-weblogic-operator-ns-weblogic-operator-clusterrolebinding-general
  278  helm install sample-weblogic-operator kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"   --wait
  279  kubectl delete ClusterRole sample-weblogic-operator-ns-weblogic-operator-clusterrolebinding-discovery
  280  helm install sample-weblogic-operator kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"   --wait
  281  kubectl delete ClusterRole sample-weblogic-operator-ns-weblogic-operator-clusterrolebinding-auth-delegator
  282  helm install sample-weblogic-operator kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"   --wait
  283  kubectl delete ClusterRole sample-weblogic-operator-ns-weblogic-operator-clusterrolebinding-general
  284  helm install sample-weblogic-operator kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"   --wait
  285  kubectl delete ClusterRole sample-weblogic-operator-ns-weblogic-operator-clusterrolebinding-nonresource
  286  clear
  287  helm install sample-weblogic-operator kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"   --wait
  288  kubectl delete sample-weblogic-operator-ns-weblogic-operator-clusterrolebinding-auth-delegator
  289  kubectl delete ClusterRole sample-weblogic-operator-ns-weblogic-operator-clusterrolebinding-auth-delegator
  290  helm  delete ClusterRole sample-weblogic-operator-ns-weblogic-operator-clusterrolebinding-auth-delegator
  291  clear
  292  kubectl get crd
  293  ls
  294  helm install sample-weblogic-operator   kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"
  295  kubectl delete ClusterRoleBinding sample-weblogic-operator-ns-weblogic-operator-clusterrolebinding-general
  296  helm install sample-weblogic-operator   kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"
  297  kubectl delete ClusterRoleBinding sample-weblogic-operator-ns-weblogic-operator-clusterrolebinding-nonresource
  298  kubectl get ClusterRoleBinding
  299  kubectl delete ClusterRoleBinding sample-weblogic-operator-ns-weblogic-operator-clusterrolebinding-auth-delegator
  300  kubectl get ClusterRoleBinding
  301  kubectl delete ClusterRoleBinding sample-weblogic-operator-ns-weblogic-operator-clusterrolebinding-discovery
  302  kubectl get ClusterRoleBinding
  303  helm install sample-weblogic-operator   kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"
  304  kubectl get pods -n sample-weblogic-operator-ns
  305  kubectl create namespace sample-domain1-ns
  306  helm upgrade sample-weblogic-operator  kubernetes/charts/weblogic-operator     --namespace sample-weblogic-operator-ns     --reuse-values     --set "domainNamespaces={sample-domain1-ns}"     --wait
  307  helm upgrade traefik-operator stable/traefik     --namespace traefik     --reuse-values     --set "kubernetes.namespaces={traefik,sample-domain1-ns}"     --wait
  308  kubectl delete ClusterRole traefik-operator
  309  helm upgrade traefik-operator stable/traefik     --namespace traefik     --reuse-values     --set "kubernetes.namespaces={traefik,sample-domain1-ns}"     --wait
  310  kubectl delete ClusterRoleBinding traefik-operator
  311  helm upgrade traefik-operator stable/traefik     --namespace traefik     --reuse-values     --set "kubernetes.namespaces={traefik,sample-domain1-ns}"     --wait
  312  kubectl create secret docker-registry ocirsecret   -n sample-domain1-ns   --docker-server=iad.ocir.io   --docker-username='aurablocks9/sasanka'   --docker-password=':B7SIWdFtxf8-9VQF<cr'   --docker-email='sasanka.abeysinghe@oracle.com'
  313  kubectl get secrets -n sample-domain1-ns
  314  kubernetes/samples/scripts/create-weblogic-domain-credentials/create-weblogic-credentials.sh -u weblogic -p welcome1 -n sample-domain1-ns -d sample-domain1
  315  kubectl get secrets -n sample-domain1-ns
  316  vi ~/my-inputs.yaml
  317  cd kubernetes/samples/scripts/create-weblogic-domain/domain-home-in-image
  318  ls
  319  ./create-domain.sh -i my-inputs.yaml -o ~/output -u weblogic -p welcome1 -e
  320  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output -u weblogic -p welcome1 -e
  321  kubectl describe domain sample-domain1 -n sample-domain1-ns
  322  vi ~/my-inputs.yaml 
  323  docker login iad.ocir.io
  324  kubectl describe domain sample-domain1 -n sample-domain1-ns
  325  kubectl get pods -n sample-domain1-ns
  326  kubectl get secrets
  327  kubectl get secrets -n sample-domain1-ns
  328  kubectl delete secret ocirsecret -n sample-domain1-ns
  329  kubectl get secrets
  330  kubectl get secrets -n sample-domain1-ns
  331  kubectl create secret docker-registry ocirsecret   -n sample-domain1-ns   --docker-server=iad.ocir.io   --docker-username='aurablocks9/sasanka'   --docker-password='{WdJTKiB<2yqhJ58ubX>'   --docker-email='sasanka.abeysinghe@oracle.com'
  332  kubectl describe domain sample-domain1 -n sample-domain1-ns
  333  kubectl get pods -n sample-domain1-ns
  334  kubectl get secrets -n sample-domain1-ns
  335  kubectl get pods -n sample-domain1-ns
  336  kubectl describe domain sample-domain1 -n sample-domain1-ns
  337  docker images
  338  kubectl get secrets -n sample-domain1-ns
  339  kubectl describe domain sample-domain1 -n sample-domain1-ns
  340  kubectl get pods -n sample-domain1-ns
  341  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output1 -u weblogic -p welcome1 -e
  342  kubectl describe domain sample-domain1 -n sample-domain1-ns
  343  kubectl get pods -n sample-domain1-ns
  344  kubectl get deployments -n sample-domain1-ns
  345  pwd
  346  /home/sasanka/weblogic-kubernetes-operator/kubernetes/samples/scripts/delete-domain/delete-weblogic-domain-resources.sh -d sample-domain1
  347  kubectl get secrets -n sample-domain1-ns
  348  cd ~
  349  ls
  350  cd weblogic-kubernetes-operator/
  351  ls
  352  kubernetes/samples/scripts/create-weblogic-domain-credentials/create-weblogic-credentials.sh   -u <username> -p <password> -n sample-domain1-ns -d sample-domain1
  353  kubernetes/samples/scripts/create-weblogic-domain-credentials/create-weblogic-credentials.sh   -u weblogic -p welcome1 -n sample-domain1-ns -d sample-domain1
  354  kubectl get secrets -n sample-domain1-ns
  355  kubectl get pods -n sample-domain1-ns
  356  kubectl describe domain sample-domain1 -n sample-domain1-ns
  357  kubectl create namespace sample-domain1-ns
  358  helm upgrade sample-weblogic-operator  kubernetes/charts/weblogic-operator     --namespace sample-weblogic-operator-ns     --reuse-values     --set "domainNamespaces={sample-domain1-ns}"     --wait
  359  helm upgrade traefik-operator stable/traefik     --namespace traefik     --reuse-values     --set "kubernetes.namespaces={traefik,sample-domain1-ns}"     --wait
  360  kubectl get secrets -n sample-domain1-ns
  361  cd kubernetes/samples/scripts/create-weblogic-domain/domain-home-in-image
  362  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output2 -u weblogic -p welcome1 -e
  363  kubectl describe domain sample-domain1 -n sample-domain1-ns
  364  docker images
  365  kubectl describe domain sample-domain1 -n sample-domain1-ns
  366  kubectl get pods -n sample-domain1-ns
  367  vi ~/my-inputs.yaml 
  368  kubectl get pods -n sample-domain1-ns
  369  kubectl logs sample-domain1-introspect-domain-job-g5p9b
  370  kubectl logs pod sample-domain1-introspect-domain-job-g5p9b
  371  kubectl describe sample-domain1-introspect-domain-job-g5p9b
  372  kubectl describe pod sample-domain1-introspect-domain-job-g5p9b
  373  kubectl get pods -n sample-domain1-ns
  374  kubectl describe pod sample-domain1-introspect-domain-job-g5p9b -n sample-domain1-ns
  375  kubectl get pods -n sample-domain1-ns
  376  docker images
  377  kubectl get pods -n sample-domain1-ns
  378  docker images
  379  docker pull domain-home-in-image:latest
  380  vi ~/my-inputs.yaml
  381  kubectl get pods -n sample-domain1-ns
  382  cd ..
  383  kubernetes/samples/scripts/delete-domain/delete-weblogic-domain-resources.sh -d sample-domain1
  384  kubectl get secrets -n sample-domain1-ns
  385  kubernetes/samples/scripts/create-weblogic-domain-credentials/create-weblogic-credentials.sh -u weblogic -p welcome1 -n sample-domain1-ns -d sample-domain1
  386  kubectl get secrets -n sample-domain1-ns
  387  cd kubernetes/samples/scripts/create-weblogic-domain/domain-home-in-image
  388  ls
  389  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output3 -u weblogic -p welcome1 -e
  390  kubectl describe domain sample-domain1 -n sample-domain1-ns
  391  docker images
  392  kubectl get pods -n sample-domain1-ns
  393  kubectl describe pod sample-domain1-introspect-domain-job-q2rbp
  394  kubectl describe pod sample-domain1-introspect-domain-job-q2rbp -n sample-domain1-ns
  395  kubectl get pods -n sample-domain1-ns
  396  kubectl describe pod sample-domain1-introspect-domain-job-pfl84 -n sample-domain1-ns
  397  docker images | grep domain
  398  docker images
  399  kubectl get nodes
  400  kubectl create secret docker-registry secret1         --docker-server=iad.ocir.io         --docker-username=aurablocks9/sasanka         --docker-password={WdJTKiB<2yqhJ58ubX>         --docker-email=sasanka.abeysinghe@oracle.com         --namespace=sample-domain1-ns
  401  kubectl create secret docker-registry secret1         --docker-server=iad.ocir.io         --docker-username=aurablocks9/sasanka         --docker-password='{WdJTKiB<2yqhJ58ubX>'         --docker-email=sasanka.abeysinghe@oracle.com         --namespace=sample-domain1-ns
  402  vi ~/my-inputs.yaml 
  403  kubectl patch serviceaccount default         -n weblogic kubectl describe pod sample-domain1-introspect-domain-job-pfl84 -n sample-domain1-nsclear
  404  clear
  405  kubectl patch serviceaccount default         -n sample-domain1-ns         -p '{"imagePullSecrets": [{"name": "secret1"}]}'
  406  kubectl describe pod sample-domain1-introspect-domain-job-pfl84 -n sample-domain1-ns
  407  kubectl get pods -n sample-domain1-ns
  408  kubectl describe pod sample-domain1-introspect-domain-job-59bb6
  409  kubectl get pods -n sample-domain1-ns
  410  kubectl delete pod sample-domain1-introspect-domain-job-59bb6
  411  kubectl get pods -n sample-domain1-ns
  412  kubectl pod delete sample-domain1-introspect-domain-job-59bb6
  413  kubectl delete pod sample-domain1-introspect-domain-job-59bb6
  414  kubectl pod delete sample-domain1-introspect-domain-job-59bb6 -n sample-domain1-ns
  415  kubectl get pods -n sample-domain1-ns
  416  kubectl delete pod sample-domain1-introspect-domain-job-59bb6
  417  kubectl delete pods sample-domain1-introspect-domain-job-59bb6
  418  kubectl delete pods sample-domain1-introspect-domain-job-59bb6 -n sample-domain1-ns
  419  kubectl get pods -n sample-domain1-ns
  420  kubectl describe domain sample-domain1 -n sample-domain1-ns
  421  kubectl get pods -n sample-domain1-ns
  422  kubectl describe domain sample-domain1 -n sample-domain1-ns
  423  docker images
  424  kubectl describe domain sample-domain1 -n sample-domain1-ns
  425  kubectl get pods -n sample-domain1-ns
  426  kubectl describe domain sample-domain1 -n sample-domain1-ns
  427  kubectl get pods -n sample-domain1-ns
  428  kubernetes/samples/scripts/delete-domain/delete-weblogic-domain-resources.sh -d sample-domain1
  429  cd ..
  430  cd ,,
  431  cd ..
  432  kubernetes/samples/scripts/delete-domain/delete-weblogic-domain-resources.sh -d sample-domain1
  433  kubernetes/samples/scripts/create-weblogic-domain-credentials/create-weblogic-credentials.sh -u weblogic -p welcome1 -n sample-domain1-ns -d sample-domain1
  434  vi ~/my-inputs.yaml 
  435  cd kubernetes/samples/scripts/create-weblogic-domain/domain-home-in-image
  436  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output4 -u weblogic -p welcome1 -e
  437  kubectl describe domain sample-domain1 -n sample-domain1-ns
  438  kubectl get pods -n sample-domain1-ns
  439  vi ~/my-inputs.yaml 
  440  cd ~
  441  ls
  442  cd weblogic-kubernetes-operator/
  443  kubernetes/samples/scripts/delete-domain/delete-weblogic-domain-resources.sh -d sample-domain1
  444  kubernetes/samples/scripts/create-weblogic-domain-credentials/create-weblogic-credentials.sh -u weblogic -p welcome1 -n sample-domain1-ns -d sample-domain1
  445  cd kubernetes/samples/scripts/create-weblogic-domain/domain-home-in-image
  446  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output5 -u weblogic -p welcome1 -e
  447  kubectl describe domain sample-domain1 -n sample-domain1-ns
  448  kubectl get pods -n sample-domain1-ns
  449  kubectl describe domain sample-domain1 -n sample-domain1-ns
  450  vi ~/my-inputs.yaml 
  451  kubectl describe domain sample-domain1 -n sample-domain1-ns
  452  kubernetes/samples/scripts/delete-domain/delete-weblogic-domain-resources.sh -d sample-domain1
  453  cd ~
  454  kubernetes/samples/scripts/delete-domain/delete-weblogic-domain-resources.sh -d sample-domain1
  455  cd weblogic-kubernetes-operator/
  456  kubernetes/samples/scripts/delete-domain/delete-weblogic-domain-resources.sh -d sample-domain1
  457  vi ~/my-inputs.yaml 
  458  kubernetes/samples/scripts/create-weblogic-domain-credentials/create-weblogic-credentials.sh -u weblogic -p welcome1 -n sample-domain1-ns -d sample-domain1
  459  cd kubernetes/samples/scripts/create-weblogic-domain/domain-home-in-image
  460  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output6 -u weblogic -p welcome1 -e
  461  kubectl describe domain sample-domain1 -n sample-domain1-ns
  462  kubectl get pods -n sample-domain1-ns
  463  vi ~/my-inputs.yaml 
  464  kubectl get pods -n sample-domain1-ns
  465  kubectl delete pods sample-domain1-introspect-domain-job-2hwnf -n sample-domain1-ns
  466  kubectl get pods -n sample-domain1-ns
  467  kubectl describe domain sample-domain1 -n sample-domain1-ns
  468  docker images
  469  docker rmi 54456a47941a
  470  docker images
  471  docker rmi 484efed74881
  472  docker images
  473  docker rmi 3d83ca84a2b8
  474  docker images
  475  docker rmi ce2a3cdfd070
  476  docker rmi 69a7a5fc7fa8
  477  docker images
  478  docker images ce2a3cdfd070
  479  docker rmi ce2a3cdfd070
  480  docker rmi eedd3018c2e3
  481  clear
  482  kubectl get pods -n sample-domain1-ns
  483  ls
  484  cd ~
  485  kubernetes/samples/scripts/delete-domain/delete-weblogic-domain-resources.sh -d sample-domain1
  486  cd weblogic-kubernetes-operator/
  487  kubernetes/samples/scripts/delete-domain/delete-weblogic-domain-resources.sh -d sample-domain1
  488  docker pull docker pull store/oracle/weblogic:12.2.1.3
  489  docker pull store/oracle/weblogic:12.2.1.3
  490  vi ~/my-inputs.yaml 
  491  kubernetes/samples/scripts/create-weblogic-domain-credentials/create-weblogic-credentials.sh -u weblogic -p welcome1 -n sample-domain1-ns -d sample-domain1
  492  cd kubernetes/samples/scripts/create-weblogic-domain/domain-home-in-image
  493  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output7 -u weblogic -p welcome1 -e
  494  kubectl describe domain sample-domain1 -n sample-domain1-ns
  495  kubectl create secret docker-registry secret1         --docker-server=iad.ocir.io         --docker-username=aurablocks9/sasanka         --docker-password='{WdJTKiB<2yqhJ58ubX>'         --docker-email=sasanka.abeysinghe@oracle.com         --namespace=sample-domain1-ns
  496  kubectl patch serviceaccount default         -n sample-domain1-ns         -p '{"imagePullSecrets": [{"name": "secret1"}]}'
  497  cd ~
  498  cd weblogic-kubernetes-operator/
  499  ls
  500  kubernetes/samples/scripts/delete-domain/delete-weblogic-domain-resources.sh -d sample-domain1
  501  vi ~/my-inputs.yaml 
  502  cd kubernetes/samples/scripts/create-weblogic-domain/domain-home-in-image
  503  cd ~
  504  cd weblogic-kubernetes-operator/
  505  kubernetes/samples/scripts/create-weblogic-domain-credentials/create-weblogic-credentials.sh -u weblogic -p welcome1 -n sample-domain1-ns -d sample-domain1
  506  cd kubernetes/samples/scripts/create-weblogic-domain/domain-home-in-image
  507  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output8 -u weblogic -p welcome1 -e
  508  kubectl describe domain sample-domain1 -n sample-domain1-ns
  509  kubernetes/samples/scripts/delete-domain/delete-weblogic-domain-resources.sh -d sample-domain1
  510  cd ~
  511  cd weblogic-kubernetes-operator/
  512  kubernetes/samples/scripts/delete-domain/delete-weblogic-domain-resources.sh -d sample-domain1
  513  docker images
  514  docker tag d6be2563bfe1 iad.ocir.io/aurablocks9/weblogic
  515  docker push iad.ocir.io/aurablocks9/weblogic
  516  cd ~
  517  vi my-inputs.yaml 
  518  kubernetes/samples/scripts/create-weblogic-domain-credentials/create-weblogic-credentials.sh -u weblogic -p welcome1 -n sample-domain1-ns -d sample-domain1
  519  cd weblogic-kubernetes-operator/
  520  kubernetes/samples/scripts/create-weblogic-domain-credentials/create-weblogic-credentials.sh -u weblogic -p welcome1 -n sample-domain1-ns -d sample-domain1
  521  cd kubernetes/samples/scripts/create-weblogic-domain/domain-home-in-image
  522  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output9 -u weblogic -p welcome1 -e
  523  kubectl describe domain sample-domain1 -n sample-domain1-ns
  524  kubectl get pods -n sample-domain1-ns
  525  kubectl get services -n sample-domain1-ns
  526  cat << EOF | kubectl apply -f -
  527  apiVersion: extensions/v1beta1
  528  kind: Ingress
  529  metadata:
  530    name: traefik-pathrouting-1
  531    namespace: sample-domain1-ns
  532    annotations:
  533      kubernetes.io/ingress.class: traefik
  534  spec:
  535    rules:
  536    - host:
  537      http:
  538        paths:
  539        - path: /
  540          backend:
  541            serviceName: sample-domain1-cluster-cluster-1
  542            servicePort: 8001
  543        - path: /console
  544          backend:
  545            serviceName: sample-domain1-admin-server
  546            servicePort: 7001          
  547  EOF
  548  kubectl describe svc traefik-operator --namespace traefik | grep Ingress | awk '{print $3}'
  549  cd ...
  550  cd ..
  551  ls
  552  cd ..
  553  helm install sample-domain1-ingress kubernetes/samples/charts/ingress-per-domain   --namespace sample-domain1-ns   --set wlsDomain.domainUID=sample-domain1   --set traefik.hostname=sample-domain1.org
  554  curl -v -H 'host: sample-domain1.org' http://localhost:30305/weblogic/ready
  555  kubectl get services -n sample-domain1-ns
  556  curl -v -H 'host: sample-domain1.org' http://localhost:7001/weblogic/ready
  557  curl -v -H 'host: sample-domain1.org' http://localhost:30701/weblogic/ready
  558  helm uninstall sample-domain1-ingress -n sample-domain1-ns
  559  kubectl describe svc traefik-operator --namespace traefik | grep Ingress | awk '{print $3}'
  560  helm upgrade traefik-operator   stable/traefik   --namespace traefik   --reuse-values   --set "kubernetes.namespaces={traefik,sample-domain1-ns}"   --wait
  561  kubectl describe svc traefik-operator --namespace traefik | grep Ingress | awk '{print $3}'
  562  helm upgrade traefik-operator stable/traefik     --namespace traefik     --reuse-values     --set "kubernetes.namespaces={traefik,sample-domain1-ns}"     --wait
  563  kubectl describe svc traefik-operator --namespace traefik | grep Ingress | awk '{print $3}'
  564  helm install stable/traefik   --name traefik-operator   --namespace traefik   --values weblogic-kubernetes-operator/kubernetes/samples/charts/traefik/values.yaml    --set "kubernetes.namespaces={traefik}"   --set "serviceType=LoadBalancer"
  565  ls
  566  kubectl get namespaces
  567  cd weblogic-kubernetes-operator/
  568  ls
  569  helm install traefik-operator stable/traefik     --namespace traefik     --values kubernetes/samples/charts/traefik/values.yaml     --set "kubernetes.namespaces={traefik}"     --wait
  570  kubectl describe svc traefik-operator --namespace traefik | grep Ingress | awk '{print $3}'
  571  kubectl get pods -n sample-domain1-ns
  572  kubectl get services -n sample-domain1-ns
  573  clear
  574  helm install sample-domain1-ingress kubernetes/samples/charts/ingress-per-domain   --namespace sample-domain1-ns   --set wlsDomain.domainUID=sample-domain1   --set traefik.hostname=sample-domain1.org
  575  curl -v -H 'host: sample-domain1.org' http://localhost:30305/weblogic/ready
  576  kubectl get services -n sample-domain1-ns
  577  cat << EOF | kubectl apply -f -
  578          apiVersion: extensions/v1beta1
  579          kind: Ingress
  580          metadata:
  581            name: traefik-pathrouting-1
  582            namespace: sample-domain1-ns
  583            annotations:
  584              kubernetes.io/ingress.class: traefik
  585          spec:
  586            rules:
  587            - host:
  588              http:
  589                paths:
  590                - path: /
  591                  backend:
  592                    serviceName: sample-domain1-cluster-cluster-1
  593                    servicePort: 8001
  594                - path: /console
  595                  backend:
  596                    serviceName: sample-domain1-admin-server-external
  597                    servicePort: 7001          
  598          EOF
  599  cat << EOF | kubectl apply -f -
  600  apiVersion: extensions/v1beta1
  601  kind: Ingress
  602  metadata:
  603    name: traefik-pathrouting-1
  604    namespace: sample-domain1-ns
  605    annotations:
  606      kubernetes.io/ingress.class: traefik
  607  spec:
  608    rules:
  609    - host:
  610      http:
  611        paths:
  612        - path: /
  613          backend:
  614            serviceName: sample-domain1-cluster-cluster-1
  615            servicePort: 8001
  616        - path: /console
  617          backend:
  618            serviceName: sample-domain1-admin-server-external
  619            servicePort: 7001          
  620  EOF 
  621  cat << EOF | kubectl apply -f -
  622  apiVersion: extensions/v1beta1
  623  kind: Ingress
  624  metadata:
  625    name: traefik-pathrouting-1
  626    namespace: sample-domain1-ns
  627    annotations:
  628      kubernetes.io/ingress.class: traefik
  629  spec:
  630    rules:
  631    - host:
  632      http:
  633        paths:
  634        - path: /
  635          backend:
  636            serviceName: sample-domain1-cluster-cluster-1
  637            servicePort: 8001
  638        - path: /console
  639          backend:
  640            serviceName: sample-domain1-admin-server-external
  641            servicePort: 7001          
  642  EOF
  643  kubectl describe svc traefik-operator --namespace traefik | grep Ingress | awk '{print $3}'
  644  kubectl describe svc traefik-operator --namespace traefik
  645  helm upgrade traefik-operator stable/traefik     --namespace traefik     --reuse-values     --set "kubernetes.namespaces={traefik}"     --wait 
  646  kubectl describe svc traefik-operator --namespace traefik | grep Ingress | awk '{print $3}'
  647  helm uninstall traefik-operator -n traefik
  648  kubectl delete namespace traefik
  649  kubectl create namespace traefik
  650  helm install traefik-operator stable/traefik     --namespace traefik     --values kubernetes/samples/charts/traefik/values.yaml     --set "kubernetes.namespaces={traefik}"     --wait
  651  vi kubernetes/samples/charts/traefik/values.yaml
  652  helm install traefik-operator stable/traefik     --namespace traefik     --values kubernetes/samples/charts/traefik/values.yaml     --set "kubernetes.namespaces={traefik}"     --wait
  653  helm uninstall sample-domain1-ingress -n sample-domain1-ns
  654  kubernetes/samples/scripts/delete-domain/delete-weblogic-domain-resources.sh -d sample-domain1
  655  history
  656  vi kubernetes/samples/charts/traefik/values.yaml
  657  helm install traefik-operator stable/traefik     --namespace traefik     --values kubernetes/samples/charts/traefik/values.yaml     --set "kubernetes.namespaces={traefik}"     --wait
  658  kubectl get pods -n sample-domain1-ns
  659  kubectl get domains -n sample-domain1-ns
  660  helm upgrade traefik-operator stable/traefik     --namespace traefik     --reuse-values     --set "kubernetes.namespaces={traefik}"     --wait 
  661  helm upgrade  sample-weblogic-operator               kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --reuse-values   --set "domainNamespaces={}"   --wait 
  662  helm upgrade  sample-weblogic-operator               kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --reuse-values   --set "domainNamespaces={}"   --wait
  663  kubectl delete namespace sample-domain1-ns
  664  helm uninstall sample-weblogic-operator -n sample-weblogic-operator-ns
  665  kubectl delete namespace sample-weblogic-operator-ns
  666  helm uninstall traefik-operator -n traefik
  667  kubectl delete namespace traefik
  668  clear
  669  cat <<EOF | kubectl apply -f -
  670  apiVersion: rbac.authorization.k8s.io/v1
  671  kind: ClusterRoleBinding
  672  metadata:
  673    name: helm-user-cluster-admin-role
  674  roleRef:
  675    apiGroup: rbac.authorization.k8s.io
  676    kind: ClusterRole
  677    name: cluster-admin
  678  subjects:
  679  - kind: ServiceAccount
  680    name: default
  681    namespace: kube-system
  682  EOF
  683  helm repo add stable https://kubernetes-charts.storage.googleapis.com/
  684  kubectl create namespace traefik
  685  helm install traefik-operator stable/traefik     --namespace traefik     --values kubernetes/samples/charts/traefik/values.yaml     --set "kubernetes.namespaces={traefik}"     --wait
  686  kubectl describe svc traefik-operator --namespace traefik | grep Ingress | awk '{print $3}'
  687  helm install stable/traefik   --name traefik-operator   --namespace traefik   --values weblogic-kubernetes-operator/kubernetes/samples/charts/traefik/values.yaml    --set "kubernetes.namespaces={traefik}"   --set "serviceType=LoadBalancer"
  688  helm uninstall traefik-operator -n traefik
  689  helm install stable/traefik   --name traefik-operator   --namespace traefik   --values weblogic-kubernetes-operator/kubernetes/samples/charts/traefik/values.yaml    --set "kubernetes.namespaces={traefik}"   --set "serviceType=LoadBalancer"
  690  helm install stable/traefik  --namespace traefik   --values weblogic-kubernetes-operator/kubernetes/samples/charts/traefik/values.yaml    --set "kubernetes.namespaces={traefik}"   --set "serviceType=LoadBalancer"
  691  helm install stable/traefik   --name traefik-operator   --namespace traefik   --values weblogic-kubernetes-operator/kubernetes/samples/charts/traefik/values.yaml    --set "kubernetes.namespaces={traefik}"   --set "serviceType=LoadBalancer"
  692  helm install traefik-operator stable/traefik     --namespace traefik     --values kubernetes/samples/charts/traefik/values.yaml     --set "kubernetes.namespaces={traefik}"     --set "serviceType=LoadBalancer"     --wait
  693  kubectl describe svc traefik-operator --namespace traefik | grep Ingress | awk '{print $3}'
  694  kubectl create namespace sample-weblogic-operator-ns
  695  kubectl create serviceaccount -n sample-weblogic-operator-ns sample-weblogic-operator-sa
  696  helm install sample-weblogic-operator kubernetes/charts/weblogic-operator   --namespace sample-weblogic-operator-ns   --set image=oracle/weblogic-kubernetes-operator:2.5.0   --set serviceAccount=sample-weblogic-operator-sa   --set "domainNamespaces={}"   --wait
  697  kubectl get pods -n sample-weblogic-operator-ns
  698  kubectl create namespace sample-domain1-ns
  699  helm upgrade sample-weblogic-operator  kubernetes/charts/weblogic-operator     --namespace sample-weblogic-operator-ns     --reuse-values     --set "domainNamespaces={sample-domain1-ns}"     --wait
  700  helm upgrade traefik-operator stable/traefik     --namespace traefik     --reuse-values     --set "kubernetes.namespaces={traefik,sample-domain1-ns}"     --wait
  701  kubectl describe svc traefik-operator --namespace traefik | grep Ingress | awk '{print $3}'
  702  kubernetes/samples/scripts/create-weblogic-domain-credentials/create-weblogic-credentials.sh -u weblogic -p welcome1 -n sample-domain1-ns -d sample-domain1
  703  vi ~/my-inputs.yaml 
  704  cd kubernetes/samples/scripts/create-weblogic-domain/domain-home-in-image
  705  ./create-domain.sh -i ~/my-inputs.yaml -o ~/output10 -u weblogic -p welcome1 -e
  706  kubectl describe domain sample-domain1 -n sample-domain1-ns
  707  kubectl get pods -n sample-domain1-ns
  708  kubectl get services -n sample-domain1-ns
  709  cat << EOF | kubectl apply -f -
  710  apiVersion: extensions/v1beta1
  711  kind: Ingress
  712  metadata:
  713  name: traefik-pathrouting-1
  714  namespace: sample-domain1-ns
  715  annotations:
  716    kubernetes.io/ingress.class: traefik
  717  spec:
  718  rules:
  719  - host:
  720    http:
  721      paths:
  722      - path: /
  723        backend:
  724          serviceName: sample-domain1-cluster-cluster-1
  725          servicePort: 8001
  726      - path: /console
  727        backend:
  728          serviceName: sample-domain1-admin-server-external
  729          servicePort: 7001          
  730  EOF
  731  clear
  732  cat << EOF | kubectl apply -f -
  733  apiVersion: extensions/v1beta1
  734  kind: Ingress
  735  metadata:
  736    name: traefik-pathrouting-1
  737    namespace: sample-domain1-ns
  738    annotations:
  739      kubernetes.io/ingress.class: traefik
  740  spec:
  741    rules:
  742    - host:
  743      http:
  744        paths:
  745        - path: /
  746          backend:
  747            serviceName: sample-domain1-cluster-cluster-1
  748            servicePort: 8001
  749        - path: /console
  750          backend:
  751            serviceName: sample-domain1-admin-server
  752            servicePort: 7001          
  753  EOF
  754  kubectl describe svc traefik-operator --namespace traefik | grep Ingress | awk '{print $3}'
  755  kubectl get nodes
  756  ls
  757  wget https://raw.githubusercontent.com/oracle/cloudnative/master/observability-and-analysis/logging/efk-stack/efk.tar.gz
  758  ls
  759  tar -xzvf ./efk.tar.gz
  760  ks
  761  ls
  762  cd efk
  763  ls
  764  kubectl get namespace
  765  kubectl create namespace efk
  766  pwd
  767  helm install /home/sasanka/efk/ -n efk --values values.yaml
  768  helm install /home/sasanka/efk/ -n efk --values values.yaml --generate-name efk
  769  helm install /home/sasanka/efk/ -n efk --values values.yaml --generate-name efk-search
  770  helm install /home/sasanka/efk/ -n efk --values values.yaml -name efk-search
  771  helm repo update
  772  helm install /home/sasanka/efk/ -n efk --values values.yaml -name efk-search
  773  helm install --name efk stable/elastic-stack
  774  helm repo add akomljen-charts     https://raw.githubusercontent.com/komljen/helm-charts/master/charts/
  775  kubectl create namespace logging 
  776  helm install --name es-operator     --namespace logging     akomljen-charts/elasticsearch-operator
  777  helm install  --namespace logging     akomljen-charts/elasticsearch-operator
  778  helm install --generate-name es-operator     --namespace logging     akomljen-charts/elasticsearch-operator
  779  helm install --name es-operator --generate-name es     --namespace logging     akomljen-charts/elasticsearch-operator
  780  helm repo add incubator http://storage.googleapis.com/kubernetes-charts-incubator
  781  helm install --name my-release incubator/elasticsearch -n logging
  782  helm install  incubator/elasticsearch -n logging
  783  helm install efk  incubator/elasticsearch -n logging
  784  kubectl svc -n logging
  785  kubectl get svc -n logging
  786  kubectl describe svc efk-elasticsearch-client
  787  kubectl describe svcs efk-elasticsearch-client
  788  kubectl describe services efk-elasticsearch-client
  789  kubectl describe services efk-elasticsearch-client -n logging
  790  kubectl expose rc example --port 9200 --target-port=http --name efk-elasticsearch-client --type=LoadBalancer
  791  kubectl expose rc efk --port 9200 --target-port=http --name efk-elasticsearch-client --type=LoadBalancer
  792  kubectl expose svc efk-elasticsearch-client --port 9200 --target-port=http  --type=LoadBalancer
  793  kubectl expose svc efk-elasticsearch-client --port 9200 --target-port=http  --type=LoadBalancer -n logging
  794  kubectl edit svc efk-elasticsearch-client.yaml
  795  kubectl edit svc efk-elasticsearch-client
  796  kubectl edit svc efk-elasticsearch-client.yaml -n logging
  797  kls
  798  ls
  799  vi loadbalancer.yaml
  800  kubectl create -f loadbalancer.yaml
  801  kubectl describe service example-service
  802  kubectl delete loadbalancer.yaml 
  803  kubectl delete efk
  804  helm delete efk
  805  helm delete efk -n logging
  806  ls
  807  vi oke-admin-service-account.yaml
  808  kubectl apply -f oke-admin-service-account.yaml
  809  kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep oke-admin | awk '{print $1}')
  810  clear
  811  kubectl get services -n kubernetes-dashboard
  812  kubectl get services
  813  kubectl get services -n oke-admin
  814  kubectl get services -n kube-system
  815  kubectl edit kubernetes-dashboard.yaml
  816  kubectl edit svc kubernetes-dashboard -n kube-system
  817  kubectl describe svc traefik-operator --namespace traefik | grep Ingress | awk '{print $3}'
  818  kubectl edit svc kubernetes-dashboard -n kube-system
  819  kubectl -n kube-system get services
  820  lsof -i tcp:32009
  821  kubectl get nodes
  822  ip addr show
  823  ip addr
  824  ifconfig
  825  hostnamectl 
  826  vi /etc/hostname
  827  vi /etc/hosts
  828  kubectl cluster-info
  829  kubectl proxy
  830  sudo lsof -i tcp:32009
  831  lsof -i tcp:32009
  832  yum install lsof
  833  sudo yum install lsof
  834  su -
  835  YGxTmCc0aY/XK3HUvOzvjoAP0Cz7SOoryUaXJQfWJIKD3khCg14R5tS8pnQGSe6p
  836  jNfnarZhipdizIemDF6ixxoBaYNQAz2mYYI+sJChU2bFDTUMI13xTq/3pAPXOtL9
  837  +rTIKfQoXHZnDwvmL81j70GfjxCUx9WPj5mK78CEpGKCJIqX241h9HZtmiCAofy8
  838  Db80LLeqKckiPdSM3/btxUBjEruCnNaVVFe8uLKFBibzx36ea83yh8rX/omzls0C
  839  m21hmOxqIPeZU1JskOEpK5qoFOMS0Imvt2u7eQIDAQABAoIBAERXiM+oKki1CO1F
  840  FNuo/GvfJYgo0hPh5z50ACmg8X1LgV8lpkRDcCZ63ihJ9lWFSHbq22wcd2Zwqt3L
  841  oD60CTgqCJofZmzuF24MRL4TUwmpIUkSwlapIWR3Eeha22uX3W50Gz/fpOzsOVId
  842  mnmyTe2kmAuXOQFbe1JF9jAKof8ux1LGdFkPYL4lVluz/TbOBJcAPaVbwjOFaB8J
  843  KTw+cfX6TOgSow6BqbYq8bUjl+4Ut8RKuCHlNCddCSEYG3HkAP1NZ+yZ+qW7Qf9K
  844  7n/nzTGO/ewKrdgX7igmOoLIkuZjDoD0Mh0hWtJDdC99evcdCB2ci1SWlsT4Hbnr
  845  MFkrMCUCgYEA9knkrsO47vb6Y9ror9yEvyTZLH6rEnRe49AysKLAYMGqdqUhvgfE
  846  nuVY1wS769N4LduGDEwqsenpbyba1UnynPeE0/fekUKCz/ZM/mXXrnFJ21nKFeGt
  847  LP9gQeOhpSm8JyJRwkRhktLUSU+P0yduRvzJbkMwEjMzcthZYvsmvQMCgYEA4Chj
  848  er580YaejGwHKlNJqk2ETN4QLYlvsIr0LrgYwJ1J5kck634N19TUnEpe5hbqtqDp
  849  lbpwbgoKrwwisSngpPY1g/Eg/mZ6M69wEJqt5SrF6nVrB+U6sTW+zLhJ0TWWc9b4
  850  a/IT23MfxvMI9NfKXsN0IIKOBLw9qW97OgH6ptMCgYAV5OfBaYDNLYOA0PsSdyYN
  851  3/a2b+RBVbsBwYZgEXfMoirHNVLUk9g0z+qf4rnZ8wih+vvlp/e7rTGlQez+PP6m
  852  WZKjTUup2iHK3vhlPSR5S3TnXQoL++3rLCCget3p0tX5HKHsBSwvYzKf+cStXrn8
  853  8Yful2Z0l7yhHv6DQBRnhQKBgESqmq7DI6Fbx73kad2BXhOZY2nYrMQGUfyW1G5r
  854  XsnCZRzxtlGdb8gqHmcyMRfy9Tu011lSn5ZV5SfyY745weNGuOYOO7ky00R5/a5Y
  855  c+S70Z0dEwh8JBqdCDHWUmaQL+KUe801fve+sIFVeeznHcshvLUoyTCSKaF50RnX
  856  +VyZAoGAXUhezBohDH/ALRfqm6m/+lEtyMoe1qwzLTfBOToTm1nBcG0BEDWbBWkx
  857  vOMcTy5JbfHAfDBK3UFLD/1WKKFdXOHton7GbQFEJYqJxUnxykwiJtwtZ+BDixxd
  858  pRmVMjtQd9BM0Va2ASX6WDEZWl3vClS8X+SifvAdW9BGPKlYucc=clear
  859  clear
  860  su -
  861  ll /etc/oci
  862  su -
  863  kubectl edit svc kubernetes-dashboard -n kube-system
  864  kubectl cluster-info
  865  kubectl proxy
  866  kubectl get svc kubernetes-dashboard -n kube-system
  867  kubectl get cluster-info
  868  kubectl get nodes
  869  kubectl get cluster-info
  870  kubectl cluster-info
  871  kubectl get proxy
  872  kubectl get svc -n kube-system
  873  kubectl proxy
  874  kubectl get edit kubernetes-dashboard -n kube-system
  875  kubectl edit kubernetes-dashboard -n kube-system
  876  kubectl edit svc kubernetes-dashboard -n kube-system
  877  kubectl describe svc traefik-operator --namespace traefik | grep Ingress | awk '{print $3}'
  878  kubectl edit svc kubernetes-dashboard -n kube-system
  879  kubectl get svc kubernetes-dashboard -n kube-system
  880  kubectl cluster-info
  881  kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep oke-admin | awk '{print $1}')
  882  ls
  883  cd weblogic-kubernetes-operator/
  884  ls
  885  cd kubernetes/
  886  ls
  887  cd src/
  888  ls
  889  cd ..
  890  ls
  891  cd charts/
  892  ls
  893  cd weblogic-operator/
  894  ls
  895  vi values.yaml
  896  cd ..
  897  history